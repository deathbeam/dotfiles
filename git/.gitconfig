[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[core]
    # Use custom `.gitignore`
    excludesfile = ~/.gitignore

    # Treat spaces before tabs and all kinds of trailing whitespace as an error
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space

    # Make `git rebase` safer on macOS
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false

    # Prevent showing files whose names contain non-ASCII symbols as unversioned.
    # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false

    # You almost always want autocrlf=input unless you really know what you are doing.
    autocrlf = input

[help]
    # Automatically correct and execute mistyped commands
    autocorrect = 1

[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
    ui = auto

[commit]
    # Custom git message based on http://chris.beams.io/posts/git-commit/
    template = ~/.gitmessage

[diff]
    tool = nvimdiff
    external = difft

[diff "bin"]
    # Use `hexdump` to diff binary files
    textconv = hexdump -v -C

[difftool]
    # Show prompt when calling diff tool
    prompt = true

    # Abort on :cq
    trustExitCode = true

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

    # Use vimdiff as default merge tool
    # tool = nvimdiff
    tool = nvimmerge3

[mergetool]
    # Show prompt when calling merge tool
    prompt = true

    # Abort on :cq
    trustExitCode = true

[mergetool "nvimmerge3"]
    # Use 3 windows only not 4 with base
    cmd = nvim -d \"$LOCAL\" \"$MERGED\" \"$REMOTE\"

[push]
    # Push only current branch instead of all branches
    default = current

    # Make `git push` push relevant annotated tags when pushing branches out.
    followTags = false

[fetch]
    prune = true

[rebase]
    autosquash = true

[credential]
    helper = store

[http]
    postBuffer = 524288000

[user]
    name = Tomas Slusny
    email = slusnucky@gmail.com

[include]
  # Include user configuration
    path = ~/.gitconfig.local
